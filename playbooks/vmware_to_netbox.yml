---
- name: 📊 Sync VMware VMs from AWX Dynamic Inventory to NetBox
  hosts: all
  gather_facts: false
  vars:
    ansible_connection: local
    netbox_url: "{{ lookup('env', 'NETBOX_API') }}"
    netbox_token: "{{ lookup('env', 'NETBOX_TOKEN') }}"
    datacenter_name: "ATI-SLC-HCI"
    default_ip_subnet: "24"
    vm_role: "server"
    tenant_name: "ATI"
    
    # Enhanced sync options
    sync_options:
      create_missing_objects: true
      update_existing_vms: true
      sync_ip_addresses: true
      sync_interfaces: true
      add_tags: true
      enable_reporting: true
    
    # Statistics tracking
    sync_stats:
      total_hosts: 0
      valid_vms: 0
      synced_vms: 0
      failed_vms: 0
      skipped_hosts: 0

  tasks:
    # 📋 Initialize sync statistics
    - name: 📋 Initialize sync statistics
      set_fact:
        sync_stats: "{{ sync_stats | combine({'total_hosts': groups['all'] | length}) }}"
      run_once: true

    # 🔍 Verificar se é uma VM válida
    - name: 🔍 Check if host is a valid VM
      set_fact:
        is_valid_vm: "{{ vm_name is defined and vm_name != 'localhost' and vm_name != inventory_hostname and vm_name != 'N/A' }}"

    # ⏭️ Skip invalid hosts
    - name: ⏭️ Skip invalid hosts
      meta: end_host
      when: not is_valid_vm

    # 📊 Mostrar informações da VM atual
    - name: 📊 Show VM processing info
      debug:
        msg:
          - "🖥️  Processing VM: {{ vm_name }}"
          - "⚡ Power State: {{ vm_power_state | default('N/A') }}"
          - "🌐 IP Address: {{ vm_ip_addresses[0] | default('N/A') if vm_ip_addresses is defined else 'N/A' }}"
          - "💻 Guest OS: {{ vm_guest_os | default('N/A') }}"
          - "🏢 Cluster: {{ vm_cluster | default('N/A') }}"
          - "📊 CPU Count: {{ vm_cpu_count | default('N/A') }}"
          - "🧠 Memory MB: {{ vm_memory_mb | default('N/A') }}"
          - "🏷️  Environment: {{ vm_environment | default('unknown') }}"
          - "🔴 Criticality: {{ vm_criticality | default('low') }}"
      when: is_valid_vm

    # Criar tenant (run_once para evitar duplicações)
    - name: Create NetBox Tenant
      netbox.netbox.netbox_tenant:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ tenant_name }}"
          slug: "{{ tenant_name | lower }}"
        state: present
      run_once: true
      when: is_valid_vm
      ignore_errors: true

    # Criar site no NetBox
    - name: Create NetBox Site
      netbox.netbox.netbox_site:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ datacenter_name }}"
          slug: "{{ datacenter_name | lower | replace('_', '-') }}"
          status: active
          tenant: "{{ tenant_name }}"
        state: present
      run_once: true
      when: is_valid_vm

    # Criar tipo de cluster
    - name: Create NetBox Cluster Type
      netbox.netbox.netbox_cluster_type:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "VMware vSphere"
          slug: "vmware-vsphere"
        state: present
      run_once: true
      when: is_valid_vm

    # Criar role para VMs
    - name: Create NetBox Device Role
      netbox.netbox.netbox_device_role:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ vm_role | title }}"
          slug: "{{ vm_role }}"
          color: "2196f3"
          vm_role: true
        state: present
      run_once: true
      when: is_valid_vm
      ignore_errors: true

    # Criar cluster para esta VM
    - name: Create NetBox Cluster
      netbox.netbox.netbox_cluster:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ vm_cluster | default('Default Cluster') }}"
          type: "VMware vSphere"
          site: "{{ datacenter_name }}"
          tenant: "{{ tenant_name }}"
        state: present
      when: 
        - is_valid_vm
        - vm_cluster is defined
      ignore_errors: true

    # Criar plataforma para esta VM
    - name: Create NetBox Platform
      netbox.netbox.netbox_platform:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ vm_guest_os | default('Unknown OS') }}"
          slug: "{{ vm_guest_os | default('unknown-os') | lower | regex_replace('[^a-z0-9-]', '-') | regex_replace('-+', '-') | regex_replace('^-|-$', '') }}"
        state: present
      when:
        - is_valid_vm
        - vm_guest_os is defined
      ignore_errors: true

    # Sincronizar VM para NetBox
    - name: "Sync VM {{ vm_name }} to NetBox"
      netbox.netbox.netbox_virtual_machine:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ vm_name | regex_replace('[\"\\'\\\\]', '') }}"
          cluster: "{{ vm_cluster | default('Default Cluster') | regex_replace('[\"\\'\\\\]', '') }}"
          platform: "{{ vm_guest_os | default('Unknown OS') | regex_replace('[\"\\'\\\\]', '') }}"
          role: "{{ vm_role }}"
          tenant: "{{ tenant_name }}"
          vcpus: "{{ vm_cpu_count | default(1) | int }}"
          memory: "{{ vm_memory_mb | default(1024) | int }}"
          status: "{{ 'active' if vm_power_state == 'poweredOn' else 'offline' }}"
          comments: |
            Imported from AWX Dynamic Inventory
            UUID: {{ vm_uuid | default('N/A') }}
            Folder: {{ vm_folder | default('N/A') }}
            Environment: {{ vm_environment | default('unknown') }}
            Criticality: {{ vm_criticality | default('low') }}
            CPU Category: {{ vm_cpu_category | default('N/A') }}
            Memory Category: {{ vm_memory_category | default('N/A') }}
            Tools Status: {{ vm_tools_status | default('N/A') }}
            Guest Family: {{ vm_guest_family | default('N/A') }}
        state: present
      register: vm_sync_result
      when: is_valid_vm
      ignore_errors: true

    # Criar interface de rede
    - name: "Create network interface for {{ vm_name }}"
      netbox.netbox.netbox_vm_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          virtual_machine: "{{ vm_name | regex_replace('[\"\\'\\\\]', '') }}"
          name: "eth0"
          enabled: true
          type: "virtual"
          description: "Primary network interface"
        state: present
      when:
        - is_valid_vm
        - vm_ip_addresses is defined
        - vm_ip_addresses | length > 0
        - vm_sync_result is succeeded
      register: interface_result
      ignore_errors: true

    # Criar endereço IP
    - name: "Create IP address for {{ vm_name }}"
      netbox.netbox.netbox_ip_address:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          address: "{{ vm_ip_addresses[0] }}/{{ default_ip_subnet }}"
          status: active
          dns_name: "{{ vm_hostname | default('') | regex_replace('[\"\\'\\\\]', '') }}"
          description: "Primary IP address for {{ vm_name }}"
          tenant: "{{ tenant_name }}"
        state: present
      when:
        - is_valid_vm
        - vm_ip_addresses is defined
        - vm_ip_addresses | length > 0
        - vm_sync_result is succeeded
      register: ip_result
      ignore_errors: true

    # 📊 Mostrar resultado da sincronização
    - name: "📊 Show sync result for {{ vm_name }}"
      debug:
        msg:
          - "🖥️  VM: {{ vm_name }}"
          - "✅ Sync Status: {{ '✅ SUCCESS' if vm_sync_result is succeeded else '❌ FAILED' }}"
          - "🌐 IP Created: {{ '✅ YES' if ip_result is succeeded else '❌ NO' }}"
          - "🔌 Interface Created: {{ '✅ YES' if interface_result is succeeded else '❌ NO' }}"
      when: is_valid_vm

    # 📊 Create tags for VM classification
    - name: "📊 Create NetBox tags for {{ vm_name }}"
      netbox.netbox.netbox_tag:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ item }}"
          slug: "{{ item | lower | regex_replace('[^a-z0-9-]', '-') }}"
          color: "{{ tag_colors[item] | default('9e9e9e') }}"
        state: present
      loop:
        - "env-{{ vm_environment | default('unknown') }}"
        - "criticality-{{ vm_criticality | default('low') }}"
        - "awx-managed"
        - "vmware-vm"
      vars:
        tag_colors:
          env-production: "f44336"
          env-development: "4caf50"
          env-testing: "ff9800"
          env-unknown: "9e9e9e"
          criticality-high: "f44336"
          criticality-medium: "ff9800"
          criticality-low: "4caf50"
          awx-managed: "2196f3"
          vmware-vm: "607d8b"
      when: 
        - is_valid_vm
        - sync_options.add_tags
        - vm_sync_result is succeeded
      ignore_errors: true

    # 🏷️ Assign tags to VM
    - name: "🏷️ Assign tags to VM {{ vm_name }}"
      netbox.netbox.netbox_virtual_machine:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ vm_name | regex_replace('[\"''\\\\]', '') }}"
          tags:
            - "env-{{ vm_environment | default('unknown') }}"
            - "criticality-{{ vm_criticality | default('low') }}"
            - "awx-managed"
            - "vmware-vm"
        state: present
      when: 
        - is_valid_vm
        - sync_options.add_tags
        - vm_sync_result is succeeded
      ignore_errors: true

# 📊 Final Statistics and Reporting
- name: 📊 Generate Sync Statistics Report
  hosts: localhost
  gather_facts: false
  vars:
    ansible_connection: local
  tasks:
    - name: 📈 Calculate final statistics
      set_fact:
        final_stats:
          total_hosts: "{{ groups['all'] | length }}"
          valid_vms: "{{ groups['all'] | length - (ansible_play_hosts_all | default([]) | length) }}"
          sync_duration: "{{ ansible_date_time.epoch | int - (start_time | default(ansible_date_time.epoch)) | int }}"
          sync_timestamp: "{{ ansible_date_time.iso8601 }}"
          environment_breakdown: "{{ hostvars | dict2items | selectattr('value.vm_environment', 'defined') | map(attribute='value.vm_environment') | list | unique }}"
          criticality_breakdown: "{{ hostvars | dict2items | selectattr('value.vm_criticality', 'defined') | map(attribute='value.vm_criticality') | list | unique }}"

    - name: 📊 Display Final Sync Report
      debug:
        msg: |
          ╔════════════════════════════════════════════════════════════════╗
          ║                   🚀 AWX → NetBox Sync Report                 ║
          ╠════════════════════════════════════════════════════════════════╣
          ║ 📊 Total Hosts Processed: {{ final_stats.total_hosts | default(0) }}                           ║
          ║ ✅ Valid VMs Found: {{ final_stats.valid_vms | default(0) }}                                ║
          ║ ⏱️  Sync Duration: {{ final_stats.sync_duration | default(0) }} seconds                      ║
          ║ 🕐 Completed At: {{ final_stats.sync_timestamp }}        ║
          ║                                                                ║
          ║ 🏷️  Environment Categories:                                   ║
          ║    {{ final_stats.environment_breakdown | join(', ') }}       ║
          ║                                                                ║
          ║ 🔴 Criticality Levels:                                        ║
          ║    {{ final_stats.criticality_breakdown | join(', ') }}       ║
          ║                                                                ║
          ║ 🎯 NetBox Instance: {{ netbox_url }}                          ║
          ║ 🏢 Tenant: {{ tenant_name }}                                  ║
          ║ 🏗️  Site: {{ datacenter_name }}                              ║
          ╚════════════════════════════════════════════════════════════════╝

    - name: 📝 Export sync report to JSON
      copy:
        content: |
          {
            "sync_report": {
              "timestamp": "{{ final_stats.sync_timestamp }}",
              "duration_seconds": {{ final_stats.sync_duration | default(0) }},
              "statistics": {
                "total_hosts": {{ final_stats.total_hosts | default(0) }},
                "valid_vms": {{ final_stats.valid_vms | default(0) }},
                "environments": {{ final_stats.environment_breakdown | to_json }},
                "criticality_levels": {{ final_stats.criticality_breakdown | to_json }}
              },
              "configuration": {
                "netbox_url": "{{ netbox_url }}",
                "tenant": "{{ tenant_name }}",
                "site": "{{ datacenter_name }}",
                "default_role": "{{ vm_role }}",
                "sync_options": {{ sync_options | to_json }}
              }
            }
          }
        dest: "/tmp/awx_netbox_sync_report_{{ ansible_date_time.epoch }}.json"
      when: sync_options.enable_reporting
