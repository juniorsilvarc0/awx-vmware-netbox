---
- name: Sync VMware VMs from AWX Inventory to NetBox
  hosts: all
  gather_facts: false
  vars:
    netbox_url: "{{ lookup('env', 'NETBOX_API') }}"
    netbox_token: "{{ lookup('env', 'NETBOX_TOKEN') }}"
    datacenter_name: "ATI-SLC-HCI"

  tasks:
    # Criar site no NetBox se não existir
    - name: Create NetBox Site
      netbox.netbox.netbox_site:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ datacenter_name }}"
          slug: "{{ datacenter_name | lower | replace('_', '-') }}"
          status: active
        state: present
      delegate_to: localhost

    # Criar cluster no NetBox se não existir
    - name: Create NetBox Cluster Type
      netbox.netbox.netbox_cluster_type:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "VMware vSphere"
          slug: "vmware-vsphere"
        state: present
      delegate_to: localhost

    # Criar cluster no NetBox
    - name: Create NetBox Cluster
      netbox.netbox.netbox_cluster:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ vm_cluster | default('Default Cluster') }}"
          type: "VMware vSphere"
          site: "{{ datacenter_name }}"
        state: present
      delegate_to: localhost
      when: vm_cluster is defined
      run_once: true

    # Criar plataforma no NetBox
    - name: Create NetBox Platform
      netbox.netbox.netbox_platform:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ vm_guest_os | default('Unknown OS') }}"
          slug: "{{ vm_guest_os | default('unknown-os') | lower | regex_replace('[^a-z0-9-]', '-') }}"
        state: present
      delegate_to: localhost
      when: vm_guest_os is defined
      run_once: true

    # Sincronizar VMs do inventário para o NetBox
    - name: Sync VM to NetBox
      netbox.netbox.netbox_virtual_machine:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ vm_name }}"
          cluster: "{{ vm_cluster | default('Default Cluster') }}"
          platform: "{{ vm_guest_os | default('Unknown OS') }}"
          vcpus: "{{ vm_cpu_count | default(1) }}"
          memory: "{{ vm_memory_mb | default(1024) }}"
          status: "{{ 'active' if vm_power_state == 'poweredOn' else 'offline' }}"
          custom_fields:
            vm_uuid: "{{ vm_uuid }}"
            vm_folder: "{{ vm_folder | default('') }}"
            vm_environment: "{{ vm_environment | default('unknown') }}"
            vm_criticality: "{{ vm_criticality | default('low') }}"
            vm_cpu_category: "{{ vm_cpu_category | default('') }}"
            vm_memory_category: "{{ vm_memory_category | default('') }}"
            tools_status: "{{ vm_tools_status | default('') }}"
            guest_family: "{{ vm_guest_family | default('') }}"
        state: present
      delegate_to: localhost
      when:
        - vm_name is defined
        - vm_name != 'localhost'

    # Criar interfaces de rede para as VMs
    - name: Create VM Network Interface
      netbox.netbox.netbox_vm_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          virtual_machine: "{{ vm_name }}"
          name: "eth0"
          enabled: true
          type: "virtual"
        state: present
      delegate_to: localhost
      when:
        - vm_name is defined
        - vm_name != 'localhost'
        - vm_ip_addresses is defined

    # Criar endereços IP para as VMs
    - name: Create VM IP Address
      netbox.netbox.netbox_ip_address:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          address: "{{ vm_ip_addresses[0] }}/24"
          assigned_object_type: "virtualization.vminterface"
          assigned_object_id: "{{ vm_interface_result.msg.id | default(omit) }}"
          dns_name: "{{ vm_hostname | default('') }}"
          status: active
        state: present
      delegate_to: localhost
      when:
        - vm_name is defined
        - vm_name != 'localhost'
        - vm_ip_addresses is defined

    # Relatório de sincronização
    - name: Generate sync report
      debug:
        msg:
          - "Synchronization completed!"
          - "VM processed: {{ vm_name | default('N/A') }}"
          - "NetBox URL: {{ netbox_url }}"
          - "Datacenter: {{ datacenter_name }}"
      delegate_to: localhost
