---
# Role para coletar facts adicionais das VMs VMware - SOMENTE LEITURA
# Arquivo: roles/vmware_facts/tasks/main.yml

- name: 🔍 Coletar informações básicas da VM
  set_fact:
    vm_basic_info:
      name: "{{ vm_name | default('N/A') }}"
      uuid: "{{ vm_uuid | default('N/A') }}"
      power_state: "{{ vm_power_state | default('N/A') }}"
      guest_os: "{{ vm_guest_os | default('N/A') }}"
      guest_family: "{{ vm_guest_family | default('N/A') }}"
      tools_status: "{{ vm_tools_status | default('N/A') }}"
      datacenter: "{{ vm_datacenter | default('N/A') }}"
      cluster: "{{ vm_cluster | default('N/A') }}"
      folder: "{{ vm_folder | default('N/A') }}"
  when: vm_name is defined

- name: 📊 Processar informações de recursos
  set_fact:
    vm_resource_info:
      cpu_count: "{{ vm_cpu_count | default(0) }}"
      memory_mb: "{{ vm_memory_mb | default(0) }}"
      memory_gb: "{{ vm_memory_gb | default(0) }}"
      cpu_category: "{{ vm_cpu_category | default('unknown') }}"
      memory_category: "{{ vm_memory_category | default('unknown') }}"
      storage_committed_gb: "{{ vm_storage_committed_gb | default(0) }}"
      storage_uncommitted_gb: "{{ vm_storage_uncommitted_gb | default(0) }}"
  when: vm_name is defined

- name: 🌐 Processar informações de rede
  set_fact:
    vm_network_info:
      hostname: "{{ vm_hostname | default('N/A') }}"
      ip_addresses: "{{ vm_ip_addresses | default([]) }}"
      networks: "{{ vm_networks | default([]) }}"
      primary_ip: "{{ vm_ip_addresses[0] if vm_ip_addresses is defined and vm_ip_addresses | length > 0 else 'N/A' }}"
      network_count: "{{ vm_networks | length if vm_networks is defined else 0 }}"
  when: vm_name is defined

- name: 💽 Processar informações de storage
  set_fact:
    vm_storage_info:
      datastores: "{{ vm_datastores | default([]) }}"
      datastore_count: "{{ vm_datastores | length if vm_datastores is defined else 0 }}"
      total_storage_gb: "{{ (vm_storage_committed_gb | default(0) | float) + (vm_storage_uncommitted_gb | default(0) | float) }}"
      storage_efficiency: "{{ ((vm_storage_uncommitted_gb | default(0) | float) / ((vm_storage_committed_gb | default(1) | float) + (vm_storage_uncommitted_gb | default(0) | float)) * 100) | round(1) if (vm_storage_committed_gb | default(0) | float) > 0 else 0 }}"
  when: vm_name is defined

- name: 📸 Processar informações de snapshots
  set_fact:
    vm_snapshot_info:
      count: "{{ vm_snapshot_count | default(0) }}"
      has_snapshots: "{{ vm_has_snapshots | default(false) }}"
      status: "{{ 'multiple' if vm_snapshot_count | default(0) > 1 else 'single' if vm_snapshot_count | default(0) == 1 else 'none' }}"
      recommendation: >-
        {%- if vm_snapshot_count | default(0) > 5 -%}
        cleanup_recommended
        {%- elif vm_snapshot_count | default(0) > 1 -%}
        review_recommended
        {%- else -%}
        ok
        {%- endif -%}
  when: vm_name is defined

- name: 🔧 Calcular métricas de performance
  set_fact:
    vm_performance_info:
      cpu_per_gb_ratio: "{{ (vm_cpu_count | default(1) | float) / (vm_memory_gb | default(1) | float) | round(2) }}"
      memory_per_cpu_gb: "{{ (vm_memory_gb | default(0) | float) / (vm_cpu_count | default(1) | float) | round(2) }}"
      storage_per_cpu_gb: "{{ ((vm_storage_committed_gb | default(0) | float) / (vm_cpu_count | default(1) | float)) | round(2) }}"
      performance_class: >-
        {%- set cpu = vm_cpu_count | default(1) | int -%}
        {%- set mem = vm_memory_gb | default(1) | float -%}
        {%- if cpu >= 8 and mem >= 16 -%}enterprise
        {%- elif cpu >= 4 and mem >= 8 -%}business
        {%- elif cpu >= 2 and mem >= 4 -%}standard
        {%- else -%}basic{%- endif -%}
  when: vm_name is defined

- name: 🏷️ Gerar tags automáticas baseadas em características
  set_fact:
    vm_computed_tags:
      - "vm_{{ vm_name | lower | regex_replace('[^a-z0-9]', '_') }}"
      - "state_{{ vm_power_state | lower | default('unknown') }}"
      - "cpu_{{ vm_cpu_category | default('unknown') }}"
      - "memory_{{ vm_memory_category | default('unknown') }}"
      - "tools_{{ vm_tools_status | lower | regex_replace('tools', '') | default('unknown') }}"
      - "os_{{ vm_guest_family | lower | default('unknown') }}"
      - "env_{{ vm_environment | lower | default('unknown') }}"
      - "criticality_{{ vm_criticality | lower | default('unknown') }}"
      - "datacenter_{{ vm_datacenter | lower | regex_replace('[^a-z0-9]', '_') | default('unknown') }}"
      - "cluster_{{ vm_cluster | lower | regex_replace('[^a-z0-9]', '_') | default('unknown') }}"
      - "performance_{{ vm_performance_info.performance_class | default('unknown') }}"
      - "snapshots_{{ vm_snapshot_info.status | default('unknown') }}"
  when: vm_name is defined

- name: 📋 Consolidar todas as informações coletadas
  set_fact:
    vm_facts_complete:
      basic: "{{ vm_basic_info | default({}) }}"
      resources: "{{ vm_resource_info | default({}) }}"
      network: "{{ vm_network_info | default({}) }}"
      storage: "{{ vm_storage_info | default({}) }}"
      snapshots: "{{ vm_snapshot_info | default({}) }}"
      performance: "{{ vm_performance_info | default({}) }}"
      classification:
        environment: "{{ vm_environment | default('unknown') }}"
        criticality: "{{ vm_criticality | default('unknown') }}"
        tags: "{{ vm_computed_tags | default([]) }}"
      metadata:
        collected_at: "{{ ansible_date_time.iso8601 | default('N/A') }}"
        collection_mode: "read_only"
        data_source: "vmware_vcenter"
  when: vm_name is defined

- name: 🔍 Verificar conformidade básica
  set_fact:
    vm_compliance_info:
      checks:
        vmware_tools_ok: "{{ vm_tools_status == 'toolsOk' }}"
        has_ip_address: "{{ vm_network_info.primary_ip != 'N/A' if vm_network_info is defined else false }}"
        proper_resources: "{{ vm_cpu_count >= 1 and vm_memory_gb >= 1 if vm_resource_info is defined else false }}"
        in_datacenter: "{{ vm_datacenter != 'N/A' if vm_basic_info is defined else false }}"
        has_network: "{{ vm_network_info.network_count > 0 if vm_network_info is defined else false }}"
      score: >-
        {%- set checks = [
          vm_tools_status == 'toolsOk',
          (vm_network_info.primary_ip != 'N/A' if vm_network_info is defined else false),
          (vm_cpu_count >= 1 and vm_memory_gb >= 1 if vm_resource_info is defined else false),
          (vm_datacenter != 'N/A' if vm_basic_info is defined else false),
          (vm_network_info.network_count > 0 if vm_network_info is defined else false)
        ] -%}
        {{ (checks | select | list | length / checks | length * 100) | round(0) | int }}
      status: >-
        {%- set score = (([ vm_tools_status == 'toolsOk', (vm_network_info.primary_ip != 'N/A' if vm_network_info is defined else false), (vm_cpu_count >= 1 and vm_memory_gb >= 1 if vm_resource_info is defined else false), (vm_datacenter != 'N/A' if vm_basic_info is defined else false), (vm_network_info.network_count > 0 if vm_network_info is defined else false) ] | select | list | length / 5 * 100) | round(0) | int) -%}
        {%- if score >= 90 -%}excellent
        {%- elif score >= 75 -%}good
        {%- elif score >= 50 -%}fair
        {%- else -%}poor{%- endif -%}
  when: vm_name is defined

- name: 📊 Exibir resumo dos facts coletados (modo debug)
  debug:
    msg: |
      🔍 FACTS COLETADOS PARA {{ vm_name }}
      =====================================
      💻 Recursos: {{ vm_cpu_count }} vCPU, {{ vm_memory_gb }}GB RAM
      🌐 Rede: {{ vm_network_info.primary_ip if vm_network_info is defined else 'N/A' }}
      💽 Storage: {{ vm_storage_info.total_storage_gb if vm_storage_info is defined else 0 }}GB
      📸 Snapshots: {{ vm_snapshot_count | default(0) }}
      🏷️  Performance: {{ vm_performance_info.performance_class if vm_performance_info is defined else 'N/A' }}
      📈 Conformidade: {{ vm_compliance_info.score if vm_compliance_info is defined else 0 }}% ({{ vm_compliance_info.status if vm_compliance_info is defined else 'N/A' }})
      🌍 Ambiente: {{ vm_environment | default('unknown') }}
      📊 Criticidade: {{ vm_criticality | default('unknown') }}
  when:
    - vm_name is defined
    - debug_facts_collection | default(false)
